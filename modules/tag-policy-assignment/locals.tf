locals {
  all_enforced_services = [
    "acm-pca:certificate-authority",
    "acm:*",
    "amplifyuibuilder:app/environment/components",
    "amplifyuibuilder:app/environment/themes",
    "apigateway:apikeys",
    "apigateway:domainnames",
    "apigateway:restapis",
    "apigateway:restapis/stages",
    "appconfig:application",
    "appconfig:application/configurationprofile",
    "appconfig:application/environment",
    "appconfig:application/environment/deployment",
    "appconfig:deploymentstrategy",
    "appmesh:*",
    "athena:*",
    "auditmanager:assessment",
    "auditmanager:assessmentFramework",
    "auditmanager:control",
    "backup-gateway:gateway",
    "backup-gateway:hypervisor",
    "backup-gateway:vm",
    "backup:*",
    "batch:job",
    "batch:job-definition",
    "batch:job-queue",
    "bugbust:event",
    "catalog:portfolio",
    "catalog:product",
    "chime:app-instance",
    "chime:app-instance/channel",
    "chime:app-instance/user",
    "cloud9:environment",
    "cloudfront:*",
    "cloudtrail:*",
    "cloudwatch:*",
    "codebuild:*",
    "codecommit:*",
    "codeguru-reviewer:association",
    "codepipeline:*",
    "codestar-connections:connection",
    "codestar-connections:host",
    "cognito-identity:*",
    "cognito-idp:*",
    "comprehend:*",
    "config:*",
    "connect:instance/agent",
    "connect:instance/contact-flow",
    "connect:instance/integration-association",
    "connect:instance/queue",
    "connect:instance/routing-profile",
    "connect:instance/transfer-destination",
    "directconnect:*",
    "directconnect:dxcon",
    "directconnect:dxlag",
    "directconnect:dxvif",
    "dlm:policy",
    "dms:*",
    "dynamodb:*",
    "ec2:capacity-reservation",
    "ec2:client-vpn-endpoint",
    "ec2:customer-gateway",
    "ec2:dhcp-options",
    "ec2:elastic-ip",
    "ec2:fleet",
    "ec2:fpga-image",
    "ec2:host-reservation",
    "ec2:image",
    "ec2:instance",
    "ec2:internet-gateway",
    "ec2:launch-template",
    "ec2:natgateway",
    "ec2:network-acl",
    "ec2:network-interface",
    "ec2:reserved-instances",
    "ec2:route-table",
    "ec2:security-group",
    "ec2:snapshot",
    "ec2:spot-instances-request",
    "ec2:subnet",
    "ec2:traffic-mirror-filter",
    "ec2:traffic-mirror-session",
    "ec2:traffic-mirror-target",
    "ec2:volume",
    "ec2:vpc",
    "ec2:vpc-endpoint",
    "ec2:vpc-endpoint-service",
    "ec2:vpc-peering-connection",
    "ec2:vpn-connection",
    "ec2:vpn-gateway",
    "ecr:repository",
    "ecs:cluster",
    "ecs:service",
    "ecs:task-set",
    "eks:cluster",
    "elastic-inference:elastic-inference-accelerator",
    "elasticache:cluster",
    "elasticbeanstalk:application",
    "elasticbeanstalk:applicationversion",
    "elasticbeanstalk:configurationtemplate",
    "elasticbeanstalk:platform",
    "elasticfilesystem:*",
    "elasticfilesystem:file-system",
    "elasticloadbalancing:*",
    "elasticloadbalancing:loadbalancer",
    "elasticloadbalancing:targetgroup",
    "elasticmapreduce:*",
    "es:domain",
    "events:*",
    "firehose:*",
    "firehose:deliverystream",
    "frauddetector:detector",
    "frauddetector:detector-version",
    "frauddetector:model",
    "frauddetector:rule",
    "frauddetector:variable",
    "fsx:*",
    "globalaccelerator:accelerator",
    "greengrass:bulk",
    "greengrass:connectorsDefinition",
    "greengrass:coresDefinition",
    "greengrass:devicesDefinition",
    "greengrass:functionsDefinition",
    "greengrass:loggersDefinition",
    "greengrass:resourcesDefinition",
    "greengrass:subscriptionsDefinition",
    "guardduty:detector",
    "guardduty:detector/filter",
    "guardduty:detector/ipset",
    "guardduty:detector/threatintelset",
    "healthlake:datastore",
    "iam:instance-profile",
    "iam:mfa",
    "iam:oidc-provider",
    "iam:policy",
    "iam:saml-provider",
    "iam:server-certificate",
    "inspector2:filter",
    "iotanalytics:*",
    "iotanalytics:channel",
    "iotanalytics:dataset",
    "iotanalytics:datastore",
    "iotanalytics:pipeline",
    "iotevents:*",
    "iotfleethub:application",
    "iotsitewise:asset",
    "iotsitewise:asset-model",
    "kinesisanalytics:*",
    "kinesisanalytics:application",
    "kms:*",
    "lambda:*",
    "logs:log-group",
    "macie2:custom-data-identifier",
    "mediastore:container",
    "mq:broker",
    "mq:configuration",
    "network-firewall:firewall",
    "network-firewall:firewall-policy",
    "network-firewall:stateful-rulegroup",
    "network-firewall:stateless-rulegroup",
    "organizations:account",
    "organizations:ou",
    "organizations:policy",
    "organizations:root",
    "ram:*",
    "rbin:rule",
    "rds:cluster-endpoint",
    "rds:cluster-pg",
    "rds:db-proxy",
    "rds:db-proxy-endpoint",
    "rds:es",
    "rds:og",
    "rds:pg",
    "rds:ri",
    "rds:secgrp",
    "rds:subgrp",
    "rds:target-group",
    "redshift:*",
    "redshift:cluster",
    "redshift:dbgroup",
    "redshift:dbname",
    "redshift:dbuser",
    "redshift:eventsubscription",
    "redshift:hsmclientcertificate",
    "redshift:hsmconfiguration",
    "redshift:parametergroup",
    "redshift:snapshot",
    "redshift:snapshotcopygrant",
    "redshift:snapshotschedule",
    "redshift:subnetgroup",
    "resource-groups:*",
    "route53:hostedzone",
    "route53resolver:*",
    "s3:bucket",
    "sagemaker:action",
    "sagemaker:app-image-config",
    "sagemaker:artifact",
    "sagemaker:context",
    "sagemaker:experiment",
    "sagemaker:flow-definition",
    "sagemaker:human-task-ui",
    "sagemaker:model-package",
    "sagemaker:model-package-group",
    "sagemaker:pipeline",
    "sagemaker:processing-job",
    "sagemaker:project",
    "sagemaker:training-job",
    "secretsmanager:*",
    "servicecatalog:application",
    "servicecatalog:attribute-groups",
    "sns:topic",
    "sqs:queue",
    "ssm-contacts:contact",
    "ssm:automation-execution",
    "ssm:document",
    "ssm:managed-instance",
    "ssm:opsitem",
    "ssm:patchbaseline",
    "ssm:session",
    "states:*",
    "storagegateway:*",
    "transfer:server",
    "transfer:user",
    "transfer:workflow",
    "wellarchitected:workload",
    "wisdom:assistant",
    "wisdom:association",
    "wisdom:content",
    "wisdom:knowledge",
    "wisdom:session",
    "worklink:fleet",
    "workspaces:*",
  ]
}
